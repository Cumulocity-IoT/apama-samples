# Event type in header server connectivity configuration for the HTTPServer sample.
#
# $Copyright (c) 2017 Cumulocity GmbH, Duesseldorf, Germany and/or its affiliates and/or their licensors.$
# Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Cumulocity GmbH.

# Load the HTTPServer
connectivityPlugins:
    httpServer:
        libraryName: connectivity-http-server
        class: HTTPServer

    stringCodec:
        libraryName: connectivity-string-codec
        class: StringCodec

    mapperCodec:
        libraryName: MapperCodec
        class: MapperCodec

    #diagnosticCodec:
     #   libraryName: DiagnosticCodec
      #  class: DiagnosticCodec

    jsonCodec:
        libraryName: connectivity-json-codec
        class: JSONCodec
 
dynamicChainManagers:
    httpServer:
        transport: httpServer
        managerConfig:
            # Required. The user defined port the server is accessible on.
            port: ${httpServer.port}
            # Specifies the host port to bind to. Defaults to empty string, "", signifying all addresses.
            bindAddress: ""
            # Transport Layer Security; disabled here. Defaults false.
            tls: false
            # Required if TLS enabled
            #tlsKeyFile: filePath
            #tlsCertificateFile: filePath
            # Map of static files, each map element is itself a string:Map.
            # The contents of this Map are of type string:string, which are required
            # to contain file:path and contenttype:type, and optionally a charset:type
            staticFiles:
                /swagger.json:
                    file: ${PARENT_DIR}/SwaggerHeader.json
                    contentType: application/json
                    charset: UTF-8

dynamicChains:
    httpServer:
        - apama.eventMap:

        - mapperCodec:
            "*":
                towardsHost:
                    mapFrom:
                        # (all HTTP headers names are provided by the server in lowercase)
                        - metadata.sag.type: metadata.http.headers.x-apamaeventtype
                        - metadata.sag.channel: metadata.http.headers.x-apamachannel
                        - payload: payload


        # Messages passing through this codec towards the host (from the 
        # transport) are assumed to have string payloads containing JSON documents. 
        # This codec translates them into map<string, object> payloads which get 
        # sent up towards the host where they translate to EPL events.
        #
        # Messages passing through this codec from the host (towards the 
        # transport) are assumed to have map<string, object> payloads.
        # This codec translates them into string payloads containing JSON documents 
        # which get sent to the stringCodec.
        - jsonCodec
        #- diagnosticCodec: { tag: prestring }

        # Messages passing through this codec towards the host (from the 
        # transport) are assumed to have binary payloads containing a UTF8-encoded
        # string.  This codec translates them into string payloads which get sent
        # up towards the host.
        #
        # Messages passing through this codec from the host (towards the 
        # transport) are assumed to have string payloads. 
        # This codec translates them into binary payloads containing a UTF8-encoded
        # string, which get sent  towards the transport.
        - stringCodec

        - httpServer:
            # None | HTTP_BASIC. Defaults None.
            #authenticationType: None
            # Required if HTTP_BASIC. Path to file generated by user, containing hashed user passwords (with eg: bcrypt or sha1 for htpasswd compatibility)
            #allowedUsersFile: filePath
            # Required, must be set true. Defaults to false, which is currently treated as an error.
            # Fully controlled responses will be supported in future releases.
            automaticResponses: true
            # Required. Any allowed. Must be supplied by the user.
            allowedMethods: [PUT]
