// $Copyright(c) 2009-2010 Progress Software Corporation (PSC). All rights reserved.$
// $Copyright (c) 2013, 2015-2018, 2021 Cumulocity GmbH, Duesseldorf, Germany and/or its affiliates and/or their licensors.$
// Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Cumulocity GmbH.

//*****************************************************************************
// Title:         SensorEventGenerator
// Description:   Generates AddSensor and SensorReading events.
// Dependencies:  None
//*****************************************************************************

monitor SensorEventGenerator {

	// Change this value to increase or decrease the number of sensors
	integer numberOfSensorToGenerate := 14;
	
	action onload() {
		
		
		// Started generator when load is complete as indicated by the first 
		// AddSensor event.
		on AddSensor() {
			integer i := 1;
			while i <= numberOfSensorToGenerate {
				spawn generator(i);
				i := i + 1;
			}
		}
	}
	
	action generator (integer i) {
		integer random;
		
		string id := "S" + i.toString();
		float temperature;
		float pressure;
		float meanTemperature;
		float meanPressure;

		// Generate mean temperature for sensor. 50 < C < 100
		random := 50;
		meanTemperature := 50.0 + random.rand().toFloat();

		// Generate mean pressure for sensor. 600 < KPA < 800
		random := 200;
		meanPressure := 600.0 + random.rand().toFloat();
	
		// Route senor definition
		//print ("ADD " + id + " " + meanTemperature.toString() + " " + meanPressure.toString());
		route AddSensor (id, meanTemperature, meanPressure);
		
		// Set initial temperature value. meanC - (5:30)
		temperature := meanTemperature;

		// Set initial pressure value. meanKPA - (30:100)
		pressure := meanPressure;
		
		// Randomly fluctuate weather values for location every 1 second
		float timeRandom := 1.0;
		float waitTime := 0.5 + timeRandom.rand(); 
		//print "WAIT " + waitTime.toString();
		on all wait (waitTime) {
			
			// Random temperature move
			random := 5;
			temperature := (temperature - 2.0) + random.rand().toFloat();
			if (temperature < 0.0) {temperature := 0.0;} 

			// Random pressure move
			random := 11;
			pressure := (pressure - 5.0) + random.rand().toFloat();
			if (pressure < 0.0) {pressure := 0.0;} 
			
			// Send sensor reading
			//print "READING " + id + " " + temperature.toString() + " " + pressure.toString();
			send Temperature (id, temperature) to "Factory1";
			send Pressure (id, pressure) to "Factory1";
		}
	}
}
